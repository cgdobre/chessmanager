// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ro.progsquad.chessmanager.ui;

import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;
import ro.progsquad.chessmanager.model.Game;
import ro.progsquad.chessmanager.model.Player;
import ro.progsquad.chessmanager.model.Team;
import ro.progsquad.chessmanager.model.TeamMatch;
import ro.progsquad.chessmanager.ui.ApplicationConversionServiceFactoryBean;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Game, String> ApplicationConversionServiceFactoryBean.getGameToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.progsquad.chessmanager.model.Game, java.lang.String>() {
            public String convert(Game game) {
                return new StringBuilder().append(game.getGameId()).append(' ').append(game.getTimePerMove()).append(' ').append(game.getNumberOfMoves()).append(' ').append(game.getStartDate()).toString();
            }
        };
    }
    
    public Converter<Long, Game> ApplicationConversionServiceFactoryBean.getIdToGameConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.progsquad.chessmanager.model.Game>() {
            public ro.progsquad.chessmanager.model.Game convert(java.lang.Long id) {
                return Game.findGame(id);
            }
        };
    }
    
    public Converter<String, Game> ApplicationConversionServiceFactoryBean.getStringToGameConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.progsquad.chessmanager.model.Game>() {
            public ro.progsquad.chessmanager.model.Game convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Game.class);
            }
        };
    }
    
    public Converter<Player, String> ApplicationConversionServiceFactoryBean.getPlayerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.progsquad.chessmanager.model.Player, java.lang.String>() {
            public String convert(Player player) {
                return new StringBuilder().append(player.getUsername()).append(' ').append(player.getOnlineRating()).append(' ').append(player.getTimeout()).append(' ').append(player.getTotalGames()).toString();
            }
        };
    }
    
    public Converter<Long, Player> ApplicationConversionServiceFactoryBean.getIdToPlayerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.progsquad.chessmanager.model.Player>() {
            public ro.progsquad.chessmanager.model.Player convert(java.lang.Long id) {
                return Player.findPlayer(id);
            }
        };
    }
    
    public Converter<String, Player> ApplicationConversionServiceFactoryBean.getStringToPlayerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.progsquad.chessmanager.model.Player>() {
            public ro.progsquad.chessmanager.model.Player convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Player.class);
            }
        };
    }
    
    public Converter<Team, String> ApplicationConversionServiceFactoryBean.getTeamToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.progsquad.chessmanager.model.Team, java.lang.String>() {
            public String convert(Team team) {
                return new StringBuilder().append(team.getTeamId()).append(' ').append(team.getTeamName()).toString();
            }
        };
    }
    
    public Converter<Long, Team> ApplicationConversionServiceFactoryBean.getIdToTeamConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.progsquad.chessmanager.model.Team>() {
            public ro.progsquad.chessmanager.model.Team convert(java.lang.Long id) {
                return Team.findTeam(id);
            }
        };
    }
    
    public Converter<String, Team> ApplicationConversionServiceFactoryBean.getStringToTeamConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.progsquad.chessmanager.model.Team>() {
            public ro.progsquad.chessmanager.model.Team convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Team.class);
            }
        };
    }
    
    public Converter<TeamMatch, String> ApplicationConversionServiceFactoryBean.getTeamMatchToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.progsquad.chessmanager.model.TeamMatch, java.lang.String>() {
            public String convert(TeamMatch teamMatch) {
                return new StringBuilder().append(teamMatch.getTeamMatchId()).append(' ').append(teamMatch.getTeamMatchName()).append(' ').append(teamMatch.getStartDate()).append(' ').append(teamMatch.getEndDate()).toString();
            }
        };
    }
    
    public Converter<Long, TeamMatch> ApplicationConversionServiceFactoryBean.getIdToTeamMatchConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.progsquad.chessmanager.model.TeamMatch>() {
            public ro.progsquad.chessmanager.model.TeamMatch convert(java.lang.Long id) {
                return TeamMatch.findTeamMatch(id);
            }
        };
    }
    
    public Converter<String, TeamMatch> ApplicationConversionServiceFactoryBean.getStringToTeamMatchConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.progsquad.chessmanager.model.TeamMatch>() {
            public ro.progsquad.chessmanager.model.TeamMatch convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TeamMatch.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getGameToStringConverter());
        registry.addConverter(getIdToGameConverter());
        registry.addConverter(getStringToGameConverter());
        registry.addConverter(getPlayerToStringConverter());
        registry.addConverter(getIdToPlayerConverter());
        registry.addConverter(getStringToPlayerConverter());
        registry.addConverter(getTeamToStringConverter());
        registry.addConverter(getIdToTeamConverter());
        registry.addConverter(getStringToTeamConverter());
        registry.addConverter(getTeamMatchToStringConverter());
        registry.addConverter(getIdToTeamMatchConverter());
        registry.addConverter(getStringToTeamMatchConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
